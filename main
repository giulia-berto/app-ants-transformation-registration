#!/bin/bash
#PBS -k o
#PBS -l nodes=1:ppn=4,walltime=1:00:00

## modules
echo "Loading modules"
module load ants
module unload matlab
module load matlab/2017a
module load spm/8
module unload python
module load dipy/dev
module load nodejs
module unload mrtrix/0.2.12 
module load mrtrix/0.3.15 
echo "Finished loading modules"


fa=`jq -r '.fa_moving' config.json`

if [ $fa == null ]; then
	input_type='t1w'
	echo "Running ANTs with T1"
else
	input_type='fa'	
	echo "Running ANTs with FA"
fi

# Check the inputs subject id
echo "Check the inputs subject id"

if [ $input_type == 't1w' ]; then 
	t1_sub1_id=`jq -r '._inputs[0].meta.subject' config.json`
	afq_sub1_id=`jq -r '._inputs[1].meta.subject' config.json`
	sub2_id=`jq -r '._inputs[2].meta.subject' config.json`
	sub1_id=$t1_sub1_id
	if [ $t1_sub1_id == $afq_sub1_id ]; then
		echo "Inputs subject IDs correctly inserted"
	else
		echo "Inputs subject IDs incorrectly inserted. Check them again."
		exit 1
	fi
else
	fa_sub1_id=`jq -r '._inputs[0].meta.subject' config.json`
	t1_sub1_id=`jq -r '._inputs[1].meta.subject' config.json` 
	afq_sub1_id=`jq -r '._inputs[2].meta.subject' config.json`
	sub2_id=`jq -r '._inputs[3].meta.subject' config.json`
	sub1_id=$fa_sub1_id
	if [ $fa_sub1_id == $t1_sub1_id -a $fa_sub1_id == $afq_sub1_id ]; then
		echo "Inputs subject IDs correctly inserted"
	else
		echo "Inputs subject IDs incorrectly inserted. Check them again."
		exit 1
	fi
fi

# AFQ conversion
echo "AFQ conversion to trk"
matlab -nosplash -nodisplay -r "afqConverter1()";

ret=$?
if [ ! $ret -eq 0 ]; then
	echo "AFQ conversion failed"
	echo $ret > finished
	exit $ret
fi

# Run compute transformation and registration
echo "Computing ANTs transformation and registration"
./voxel_based_transformation_registration_${input_type}.sh ${sub1_id} ${sub2_id}


# Build a fg structure from tck registered
while read tract_name; do         

    echo "Tract name: $tract_name"; 

    tck_filename=\'tracts_tck/sub-${sub1_id}_space_${sub2_id}_var-ant4${input_type}_set-${tract_name}_tract.tck\';
    tract_filename=\'$tract_name\';
    echo $tck_filename;
    echo $tract_filename
    matlab -nosplash -nodisplay -r "my_convert_tck2fg($tck_filename, $tract_filename)";

    if [ -f $tract_name'.mat' ]; then 
    	echo "tck2fg conversion done."
    else 
	echo "tck2fg conversion failed."
	exit 1
    fi
    
done < tract_name_list.txt


# Merge the fg structures and create the files for the wmc structure
echo "Creating the WMC structure"
output_filename=${sub1_id}_space_${sub2_id}'_var-partial_tract.tck';
python build_partial_tractogram.py -tracts_tck_dir 'tracts_tck' -out ${output_filename};
matlab -nosplash -nodisplay -r "my_fg_merge()";

if [ -f 'output.mat' ]; then 
    	echo "WCM structure created."
else 
	echo "WCM structure missing."
	exit 1
fi


echo "Complete"
