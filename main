#!/bin/bash
#PBS -k o
#PBS -l nodes=1:ppn=4,walltime=5:00:00

[ $PBS_O_WORKDIR ] && cd $PBS_O_WORKDIR

## modules
echo "Loading modules"
module load ants
module unload matlab
module load matlab/2017a
module load spm/8
module unload python
module load dipy/dev
module load nodejs
module unload mrtrix/0.2.12 
module load mrtrix/0.3.15 
echo "Finished loading modules"

export PYTHONPATH=/N/u/brlife/git/nibabel:$PYTHONPATH

# Check the inputs subject id
echo "Check the inputs subject id"
t1_sub1_id=`jq -r '._inputs[0].meta.subject' config.json`
fa_sub1_id=`jq -r '._inputs[1].meta.subject' config.json`
afq_sub1_id=`jq -r '._inputs[2].meta.subject' config.json`
t1_sub2_id=`jq -r '._inputs[3].meta.subject' config.json`
fa_sub2_id=`jq -r '._inputs[4].meta.subject' config.json`
if [ $fa_sub1_id == $t1_sub1_id -a $afq_sub1_id == $t1_sub1_id -a $fa_sub2_id == $t1_sub2_id ]; then
	echo "Inputs subject IDs correctly inserted"
else
	echo "Inputs subject IDs incorrectly inserted. Check them again."
	exit 1
fi

# AFQ conversion
echo "AFQ conversion to trk"
matlab -nosplash -nodisplay -r "afqConverter1()";

ret=$?
if [ ! $ret -eq 0 ]; then
	echo "AFQ conversion failed"
	echo $ret > finished
	exit $ret
fi

# Run compute transformation and registration
echo "Computing ANTs transformation and registration"
#./voxel_based_transformation_registration_karst.sh ${t1_sub1_id} ${t1_sub2_id}
./voxel_based_transformation_registration_karst.sh 615441 615744

ret=$?
if [ ! $ret -eq 0 ]; then
	echo "DSC computation failed"
	echo $ret > finished
	exit $ret
fi

echo "Complete"
